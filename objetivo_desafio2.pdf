Desafio # 2
Objetivo:
Este desafío tiene como objetivo realizar la configuración de un webhook en un repositorio de
Github y también crear un simple pipeline para ejecutar un build y testear un proyecto NodeJS.
Escenario:
Nuestra organización nos encomendó la tarea de realizar una prueba de concepto para crear
un CI/CD de nodejs, necesitan entender cómo se debe realizar el proceso de build para una
API hecha en nodejs.
Por este motivo, nos entregaron una aplicación de ejemplo hecha en esta tecnología, este
proyecto cuenta con una prueba integrada hecha en la herramienta Jest propia de este
framework de desarrollo.
El referente de desarrollo, nos encargó realizar la configuración de un webhook que permita
hacer un build automático cada vez que se produzca un push o un pull request, esto puede
ayudar para automatizar la ejecución del job para este CI/CD.
Requisitos:
1. Crear un fork del siguiente proyecto en nuestro cuenta de Github.
ProyectoURL
nodejs-helloworld-apihttps://github.com/edgaregonzalez/nodejs-helloworld-api
2. Realizar la configuración del github webhook para inicializar el job cada vez que se
produce un push o un se crea un PR.
3. Exponer mediante ngrok el servicio de Jenkins para que este pueda ser accedido por
Github.
4. Elaborar un jenkins pipeline para que ejecute los pasos para desarrollo, tomar las
instrucciones del README.md del proyecto.Documentación de referencia:
TituloDescripciónURL
Ngrok developer ingressPermite exponer un servicio local
hacia internet.https://ngrok.com/
Github WebhooksDocumentación oficial sobre los
webhook.https://docs.github.com/en/webho
oks/about-webhooks
Jenkins Github pluginPlugin utilizado para integrar los
webhook de github a Jenkins.https://plugins.jenkins.io/github/
Instalar nvm para nodejsGuia como instalar nvm en un
sistema linux, nvm permite correr
distintas versiones de nodejs en
nuestro entorno local.https://nodejs.org/en/download/p
ackage-manager/
Entregables:
Los entregables establecidos para este proyecto con:
1. Código fuente del pipeline de Jenkins publicado en un repositorio de Github (El
repositorio debe ser público).
2. Guía detallada de cómo utilizar el job de Jenkins en un archivo formato DOC o PDF
(Adicional al documento y como algo opcional puede crear un archivo README.MD
como parte del repositorio).
3. El documento debe contener un apartado de evidencia de las pruebas con resultado
exitoso.
Evaluacion:
●
●
●
●
●
Entrega en fecha.
Redactar documentación legible y que sea comprendida por terceros..
Añade material de soporte adicional.
○ Ejemplo: Diagrama de alto nivel.
Cumple con las consignas solicitadas.
El entregable es funcional.○
Ejemplo: el script bash al ejecutarse funciona sin errores y realiza lo solicitado.
